
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AND ARROW ASIGN ATRIBUTE CLASS COMMA COMMENT DECIMAL DEF DIFER DIFFERENT DIVIDE DOSPUNTOS DOT ELSE END EQUAL FALSE FOR GEQT GETS ID IF IN LBRACK LEQT LKEY LPAREN MAYORQUE MENORQUE MINUS NEW NOT NUMBER OR OR PLUS PUTS RANGE RBRACK RKEY RPAREN STRUCT SYMBOL TEXT TEXTO TIMES TRUE WHILEsentencia : expresion\n               |   instanciacion\n               |   declaracioninstanciacion : SYMBOL ASIGN NUMBER\n                     | SYMBOL ASIGN TEXT\n                     | asignacion_estructurasdeclaracion : CLASS SYMBOL\n                   | DEF SYMBOLexpresion : comentario\n                 | impresion_puts\n                 | expresion_valor\n                 | estructura_controlexpresion_valor : NUMBER\n                       | TEXTasignacion_estructuras : SYMBOL ASIGN estructura_array\n                              | SYMBOL ASIGN estructura_hashestructura_array :  LBRACK valor_array RBRACKvalor_array : NUMBER\n                   | TEXT\n                   | TEXT COMMA valor_array\n                   | NUMBER COMMA valor_arrayimpresion_puts : PUTS TEXT\n                      | PUTS NUMBER\n                      | PUTS SYMBOL estructura_control : bloque_if END\n                         | bloque_if else END\n                         | bloque_forbloque_if : IF boolean sentencia\n                 | IF comparacion sentencia\n                 | IF comparacion EQUAL boolean sentencia else : ELSE sentencia boolean : FALSE\n                | TRUE\n                comparacion : NUMBER EQUAL NUMBER\n                   | NUMBER MAYORQUE NUMBER\n                   | NUMBER MENORQUE NUMBERbloque_for : FOR SYMBOL IN rango sentencia ENDrango : LPAREN NUMBER RANGE NUMBER RPARENestructura_hash :  LKEY valor_hash RKEYvalor_hash : NUMBER \n    expresion   :   expresion AND expresion\n                |   expresion OR expresion\n                |   expresion NOT expresion\n                |  LPAREN expresion AND expresion RPAREN\n                |  LPAREN expresion OR expresion RPAREN\n                |  LPAREN expresion NOT expresion RPAREN\n    \n    expresion   :  expresion MENORQUE expresion\n                |  expresion MAYORQUE expresion\n                |  expresion LEQT expresion\n                |   expresion GEQT expresion\n                |   expresion EQUAL expresion\n                |   expresion DIFER expresion\n                |  LPAREN expresion RPAREN MENORQUE LPAREN expresion RPAREN\n                |  LPAREN expresion RPAREN MAYORQUE LPAREN expresion RPAREN\n                |  LPAREN expresion RPAREN LEQT LPAREN expresion RPAREN\n                |  LPAREN  expresion RPAREN GEQT LPAREN expresion RPAREN\n                |  LPAREN  expresion RPAREN ASIGN LPAREN expresion RPAREN\n                |  LPAREN  expresion RPAREN DIFER LPAREN expresion RPAREN\n    comentario : COMMENT'
    
_lr_action_items = {'LPAREN':([0,9,22,23,24,25,26,27,28,29,30,40,41,42,43,44,56,58,59,74,76,77,78,79,80,81,89,90,91,92,93,96,97,98,99,100,101,128,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,-32,-33,9,9,9,94,96,97,98,99,100,101,9,-34,-35,-36,9,9,9,9,9,9,9,-38,]),'SYMBOL':([0,14,15,17,21,40,41,42,43,44,89,90,91,92,93,128,],[10,33,34,37,46,10,10,10,-32,-33,10,-34,-35,-36,10,-38,]),'CLASS':([0,40,41,42,43,44,89,90,91,92,93,128,],[14,14,14,14,-32,-33,14,-34,-35,-36,14,-38,]),'DEF':([0,40,41,42,43,44,89,90,91,92,93,128,],[15,15,15,15,-32,-33,15,-34,-35,-36,15,-38,]),'COMMENT':([0,9,22,23,24,25,26,27,28,29,30,40,41,42,43,44,56,58,59,89,90,91,92,93,96,97,98,99,100,101,128,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,-32,-33,16,16,16,16,-34,-35,-36,16,16,16,16,16,16,16,-38,]),'PUTS':([0,9,22,23,24,25,26,27,28,29,30,40,41,42,43,44,56,58,59,89,90,91,92,93,96,97,98,99,100,101,128,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,-32,-33,17,17,17,17,-34,-35,-36,17,17,17,17,17,17,17,-38,]),'NUMBER':([0,9,17,20,22,23,24,25,26,27,28,29,30,32,40,41,42,43,44,56,58,59,64,65,71,72,73,89,90,91,92,93,94,96,97,98,99,100,101,105,106,120,128,],[11,11,36,45,11,11,11,11,11,11,11,11,11,60,11,11,11,-32,-33,11,11,11,85,88,90,91,92,11,-34,-35,-36,11,110,11,11,11,11,11,11,85,85,127,-38,]),'TEXT':([0,9,17,22,23,24,25,26,27,28,29,30,32,40,41,42,43,44,56,58,59,64,89,90,91,92,93,96,97,98,99,100,101,105,106,128,],[12,12,35,12,12,12,12,12,12,12,12,12,61,12,12,12,-32,-33,12,12,12,86,12,-34,-35,-36,12,12,12,12,12,12,12,86,86,-38,]),'IF':([0,9,22,23,24,25,26,27,28,29,30,40,41,42,43,44,56,58,59,89,90,91,92,93,96,97,98,99,100,101,128,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,-32,-33,20,20,20,20,-34,-35,-36,20,20,20,20,20,20,20,-38,]),'FOR':([0,9,22,23,24,25,26,27,28,29,30,40,41,42,43,44,56,58,59,89,90,91,92,93,96,97,98,99,100,101,128,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,-32,-33,21,21,21,21,-34,-35,-36,21,21,21,21,21,21,21,-38,]),'$end':([1,2,3,4,5,6,7,8,11,12,13,16,19,33,34,35,36,37,38,47,48,49,50,51,52,53,54,55,60,61,62,63,66,95,102,103,104,107,119,121,122,123,124,125,126,],[0,-1,-2,-3,-9,-10,-11,-12,-13,-14,-6,-59,-27,-7,-8,-22,-23,-24,-25,-41,-42,-43,-47,-48,-49,-50,-51,-52,-4,-5,-15,-16,-26,-44,-45,-46,-17,-39,-37,-53,-54,-55,-56,-57,-58,]),'END':([2,3,4,5,6,7,8,11,12,13,16,18,19,33,34,35,36,37,38,39,47,48,49,50,51,52,53,54,55,60,61,62,63,66,67,68,69,95,102,103,104,107,108,109,119,121,122,123,124,125,126,],[-1,-2,-3,-9,-10,-11,-12,-13,-14,-6,-59,38,-27,-7,-8,-22,-23,-24,-25,66,-41,-42,-43,-47,-48,-49,-50,-51,-52,-4,-5,-15,-16,-26,-31,-28,-29,-44,-45,-46,-17,-39,-30,119,-37,-53,-54,-55,-56,-57,-58,]),'ELSE':([2,3,4,5,6,7,8,11,12,13,16,18,19,33,34,35,36,37,38,47,48,49,50,51,52,53,54,55,60,61,62,63,66,68,69,95,102,103,104,107,108,119,121,122,123,124,125,126,],[-1,-2,-3,-9,-10,-11,-12,-13,-14,-6,-59,40,-27,-7,-8,-22,-23,-24,-25,-41,-42,-43,-47,-48,-49,-50,-51,-52,-4,-5,-15,-16,-26,-28,-29,-44,-45,-46,-17,-39,-30,-37,-53,-54,-55,-56,-57,-58,]),'AND':([2,5,6,7,8,11,12,16,19,31,35,36,37,38,47,48,49,50,51,52,53,54,55,66,75,82,83,95,102,103,111,112,113,114,115,116,119,121,122,123,124,125,126,],[22,-9,-10,-11,-12,-13,-14,-59,-27,56,-22,-23,-24,-25,22,22,22,22,22,22,22,22,22,-26,22,22,22,-44,-45,-46,22,22,22,22,22,22,-37,-53,-54,-55,-56,-57,-58,]),'OR':([2,5,6,7,8,11,12,16,19,31,35,36,37,38,47,48,49,50,51,52,53,54,55,66,75,82,83,95,102,103,111,112,113,114,115,116,119,121,122,123,124,125,126,],[23,-9,-10,-11,-12,-13,-14,-59,-27,58,-22,-23,-24,-25,23,23,23,23,23,23,23,23,23,-26,23,23,23,-44,-45,-46,23,23,23,23,23,23,-37,-53,-54,-55,-56,-57,-58,]),'NOT':([2,5,6,7,8,11,12,16,19,31,35,36,37,38,47,48,49,50,51,52,53,54,55,66,75,82,83,95,102,103,111,112,113,114,115,116,119,121,122,123,124,125,126,],[24,-9,-10,-11,-12,-13,-14,-59,-27,59,-22,-23,-24,-25,24,24,24,24,24,24,24,24,24,-26,24,24,24,-44,-45,-46,24,24,24,24,24,24,-37,-53,-54,-55,-56,-57,-58,]),'MENORQUE':([2,5,6,7,8,11,12,16,19,31,35,36,37,38,45,47,48,49,50,51,52,53,54,55,57,66,75,82,83,95,102,103,111,112,113,114,115,116,119,121,122,123,124,125,126,],[25,-9,-10,-11,-12,-13,-14,-59,-27,25,-22,-23,-24,-25,73,25,25,25,25,25,25,25,25,25,76,-26,25,25,25,-44,-45,-46,25,25,25,25,25,25,-37,-53,-54,-55,-56,-57,-58,]),'MAYORQUE':([2,5,6,7,8,11,12,16,19,31,35,36,37,38,45,47,48,49,50,51,52,53,54,55,57,66,75,82,83,95,102,103,111,112,113,114,115,116,119,121,122,123,124,125,126,],[26,-9,-10,-11,-12,-13,-14,-59,-27,26,-22,-23,-24,-25,72,26,26,26,26,26,26,26,26,26,77,-26,26,26,26,-44,-45,-46,26,26,26,26,26,26,-37,-53,-54,-55,-56,-57,-58,]),'LEQT':([2,5,6,7,8,11,12,16,19,31,35,36,37,38,47,48,49,50,51,52,53,54,55,57,66,75,82,83,95,102,103,111,112,113,114,115,116,119,121,122,123,124,125,126,],[27,-9,-10,-11,-12,-13,-14,-59,-27,27,-22,-23,-24,-25,27,27,27,27,27,27,27,27,27,78,-26,27,27,27,-44,-45,-46,27,27,27,27,27,27,-37,-53,-54,-55,-56,-57,-58,]),'GEQT':([2,5,6,7,8,11,12,16,19,31,35,36,37,38,47,48,49,50,51,52,53,54,55,57,66,75,82,83,95,102,103,111,112,113,114,115,116,119,121,122,123,124,125,126,],[28,-9,-10,-11,-12,-13,-14,-59,-27,28,-22,-23,-24,-25,28,28,28,28,28,28,28,28,28,79,-26,28,28,28,-44,-45,-46,28,28,28,28,28,28,-37,-53,-54,-55,-56,-57,-58,]),'EQUAL':([2,5,6,7,8,11,12,16,19,31,35,36,37,38,42,45,47,48,49,50,51,52,53,54,55,66,75,82,83,90,91,92,95,102,103,111,112,113,114,115,116,119,121,122,123,124,125,126,],[29,-9,-10,-11,-12,-13,-14,-59,-27,29,-22,-23,-24,-25,70,71,29,29,29,29,29,29,29,29,29,-26,29,29,29,-34,-35,-36,-44,-45,-46,29,29,29,29,29,29,-37,-53,-54,-55,-56,-57,-58,]),'DIFER':([2,5,6,7,8,11,12,16,19,31,35,36,37,38,47,48,49,50,51,52,53,54,55,57,66,75,82,83,95,102,103,111,112,113,114,115,116,119,121,122,123,124,125,126,],[30,-9,-10,-11,-12,-13,-14,-59,-27,30,-22,-23,-24,-25,30,30,30,30,30,30,30,30,30,81,-26,30,30,30,-44,-45,-46,30,30,30,30,30,30,-37,-53,-54,-55,-56,-57,-58,]),'RPAREN':([5,6,7,8,11,12,16,19,31,35,36,37,38,47,48,49,50,51,52,53,54,55,66,75,82,83,95,102,103,111,112,113,114,115,116,119,121,122,123,124,125,126,127,],[-9,-10,-11,-12,-13,-14,-59,-27,57,-22,-23,-24,-25,-41,-42,-43,-47,-48,-49,-50,-51,-52,-26,95,102,103,-44,-45,-46,121,122,123,124,125,126,-37,-53,-54,-55,-56,-57,-58,128,]),'ASIGN':([10,57,],[32,80,]),'FALSE':([20,70,],[43,43,]),'TRUE':([20,70,],[44,44,]),'LBRACK':([32,],[64,]),'LKEY':([32,],[65,]),'IN':([46,],[74,]),'RBRACK':([84,85,86,117,118,],[104,-18,-19,-21,-20,]),'COMMA':([85,86,],[105,106,]),'RKEY':([87,88,],[107,-40,]),'RANGE':([110,],[120,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentencia':([0,40,41,42,89,93,],[1,67,68,69,108,109,]),'expresion':([0,9,22,23,24,25,26,27,28,29,30,40,41,42,56,58,59,89,93,96,97,98,99,100,101,],[2,31,47,48,49,50,51,52,53,54,55,2,2,2,75,82,83,2,2,111,112,113,114,115,116,]),'instanciacion':([0,40,41,42,89,93,],[3,3,3,3,3,3,]),'declaracion':([0,40,41,42,89,93,],[4,4,4,4,4,4,]),'comentario':([0,9,22,23,24,25,26,27,28,29,30,40,41,42,56,58,59,89,93,96,97,98,99,100,101,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'impresion_puts':([0,9,22,23,24,25,26,27,28,29,30,40,41,42,56,58,59,89,93,96,97,98,99,100,101,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'expresion_valor':([0,9,22,23,24,25,26,27,28,29,30,40,41,42,56,58,59,89,93,96,97,98,99,100,101,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'estructura_control':([0,9,22,23,24,25,26,27,28,29,30,40,41,42,56,58,59,89,93,96,97,98,99,100,101,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'asignacion_estructuras':([0,40,41,42,89,93,],[13,13,13,13,13,13,]),'bloque_if':([0,9,22,23,24,25,26,27,28,29,30,40,41,42,56,58,59,89,93,96,97,98,99,100,101,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'bloque_for':([0,9,22,23,24,25,26,27,28,29,30,40,41,42,56,58,59,89,93,96,97,98,99,100,101,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'else':([18,],[39,]),'boolean':([20,70,],[41,89,]),'comparacion':([20,],[42,]),'estructura_array':([32,],[62,]),'estructura_hash':([32,],[63,]),'valor_array':([64,105,106,],[84,117,118,]),'valor_hash':([65,],[87,]),'rango':([74,],[93,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sentencia","S'",1,None,None,None),
  ('sentencia -> expresion','sentencia',1,'p_sentencia','sintactico.py',11),
  ('sentencia -> instanciacion','sentencia',1,'p_sentencia','sintactico.py',12),
  ('sentencia -> declaracion','sentencia',1,'p_sentencia','sintactico.py',13),
  ('instanciacion -> SYMBOL ASIGN NUMBER','instanciacion',3,'p_instanciacion','sintactico.py',18),
  ('instanciacion -> SYMBOL ASIGN TEXT','instanciacion',3,'p_instanciacion','sintactico.py',19),
  ('instanciacion -> asignacion_estructuras','instanciacion',1,'p_instanciacion','sintactico.py',20),
  ('declaracion -> CLASS SYMBOL','declaracion',2,'p_declaracion','sintactico.py',25),
  ('declaracion -> DEF SYMBOL','declaracion',2,'p_declaracion','sintactico.py',26),
  ('expresion -> comentario','expresion',1,'p_expresion','sintactico.py',31),
  ('expresion -> impresion_puts','expresion',1,'p_expresion','sintactico.py',32),
  ('expresion -> expresion_valor','expresion',1,'p_expresion','sintactico.py',33),
  ('expresion -> estructura_control','expresion',1,'p_expresion','sintactico.py',34),
  ('expresion_valor -> NUMBER','expresion_valor',1,'p_expresion_valor','sintactico.py',39),
  ('expresion_valor -> TEXT','expresion_valor',1,'p_expresion_valor','sintactico.py',40),
  ('asignacion_estructuras -> SYMBOL ASIGN estructura_array','asignacion_estructuras',3,'p_asignacion_estructuras','sintactico.py',45),
  ('asignacion_estructuras -> SYMBOL ASIGN estructura_hash','asignacion_estructuras',3,'p_asignacion_estructuras','sintactico.py',46),
  ('estructura_array -> LBRACK valor_array RBRACK','estructura_array',3,'p_estructura_array','sintactico.py',51),
  ('valor_array -> NUMBER','valor_array',1,'p_valor_array','sintactico.py',56),
  ('valor_array -> TEXT','valor_array',1,'p_valor_array','sintactico.py',57),
  ('valor_array -> TEXT COMMA valor_array','valor_array',3,'p_valor_array','sintactico.py',58),
  ('valor_array -> NUMBER COMMA valor_array','valor_array',3,'p_valor_array','sintactico.py',59),
  ('impresion_puts -> PUTS TEXT','impresion_puts',2,'p_impresion_puts','sintactico.py',64),
  ('impresion_puts -> PUTS NUMBER','impresion_puts',2,'p_impresion_puts','sintactico.py',65),
  ('impresion_puts -> PUTS SYMBOL','impresion_puts',2,'p_impresion_puts','sintactico.py',66),
  ('estructura_control -> bloque_if END','estructura_control',2,'p_estructura_control','sintactico.py',72),
  ('estructura_control -> bloque_if else END','estructura_control',3,'p_estructura_control','sintactico.py',73),
  ('estructura_control -> bloque_for','estructura_control',1,'p_estructura_control','sintactico.py',74),
  ('bloque_if -> IF boolean sentencia','bloque_if',3,'p_bloque_if','sintactico.py',78),
  ('bloque_if -> IF comparacion sentencia','bloque_if',3,'p_bloque_if','sintactico.py',79),
  ('bloque_if -> IF comparacion EQUAL boolean sentencia','bloque_if',5,'p_bloque_if','sintactico.py',80),
  ('else -> ELSE sentencia','else',2,'p_else','sintactico.py',84),
  ('boolean -> FALSE','boolean',1,'p_boolean','sintactico.py',88),
  ('boolean -> TRUE','boolean',1,'p_boolean','sintactico.py',89),
  ('comparacion -> NUMBER EQUAL NUMBER','comparacion',3,'p_comparacion','sintactico.py',94),
  ('comparacion -> NUMBER MAYORQUE NUMBER','comparacion',3,'p_comparacion','sintactico.py',95),
  ('comparacion -> NUMBER MENORQUE NUMBER','comparacion',3,'p_comparacion','sintactico.py',96),
  ('bloque_for -> FOR SYMBOL IN rango sentencia END','bloque_for',6,'p_bloque_for','sintactico.py',100),
  ('rango -> LPAREN NUMBER RANGE NUMBER RPAREN','rango',5,'p_rango','sintactico.py',103),
  ('estructura_hash -> LKEY valor_hash RKEY','estructura_hash',3,'p_estructura_hash','sintactico.py',107),
  ('valor_hash -> NUMBER','valor_hash',1,'p_valor_hash','sintactico.py',111),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_booleana','sintactico.py',119),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_booleana','sintactico.py',120),
  ('expresion -> expresion NOT expresion','expresion',3,'p_expresion_booleana','sintactico.py',121),
  ('expresion -> LPAREN expresion AND expresion RPAREN','expresion',5,'p_expresion_booleana','sintactico.py',122),
  ('expresion -> LPAREN expresion OR expresion RPAREN','expresion',5,'p_expresion_booleana','sintactico.py',123),
  ('expresion -> LPAREN expresion NOT expresion RPAREN','expresion',5,'p_expresion_booleana','sintactico.py',124),
  ('expresion -> expresion MENORQUE expresion','expresion',3,'p_expresion_logicas','sintactico.py',141),
  ('expresion -> expresion MAYORQUE expresion','expresion',3,'p_expresion_logicas','sintactico.py',142),
  ('expresion -> expresion LEQT expresion','expresion',3,'p_expresion_logicas','sintactico.py',143),
  ('expresion -> expresion GEQT expresion','expresion',3,'p_expresion_logicas','sintactico.py',144),
  ('expresion -> expresion EQUAL expresion','expresion',3,'p_expresion_logicas','sintactico.py',145),
  ('expresion -> expresion DIFER expresion','expresion',3,'p_expresion_logicas','sintactico.py',146),
  ('expresion -> LPAREN expresion RPAREN MENORQUE LPAREN expresion RPAREN','expresion',7,'p_expresion_logicas','sintactico.py',147),
  ('expresion -> LPAREN expresion RPAREN MAYORQUE LPAREN expresion RPAREN','expresion',7,'p_expresion_logicas','sintactico.py',148),
  ('expresion -> LPAREN expresion RPAREN LEQT LPAREN expresion RPAREN','expresion',7,'p_expresion_logicas','sintactico.py',149),
  ('expresion -> LPAREN expresion RPAREN GEQT LPAREN expresion RPAREN','expresion',7,'p_expresion_logicas','sintactico.py',150),
  ('expresion -> LPAREN expresion RPAREN ASIGN LPAREN expresion RPAREN','expresion',7,'p_expresion_logicas','sintactico.py',151),
  ('expresion -> LPAREN expresion RPAREN DIFER LPAREN expresion RPAREN','expresion',7,'p_expresion_logicas','sintactico.py',152),
  ('comentario -> COMMENT','comentario',1,'p_comentario','sintactico.py',176),
]
